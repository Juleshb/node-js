displayFile("<div class=\"file\">\n  <h2 id=\"test/index.test.js\"> test/index.test.js</h2>\n  <div id=\"stats\">\n    <div class=\"linecoverage\">\n      <span class=\"linecov high\">\n        [100%]\n      </span>\n      <span>75/75<span>\n      <span class=\"misses\">\n        0\n      </span>\n    </div>\n    <div class=\"branchcoverage\">\n      <span class=\"branchcov high\">\n        [100%]\n      </span>\n      <span>0/0</span>\n      <span class=\"misses\">\n        0\n      </span>\n    </div>\n  </div>\n  <table id=\"source\">\n    <thead>\n      <tr>\n        <th>Line</th>\n        <th>Hits</th>\n        <th>Source</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n      \n      \n        \n        \n            <tr>\n              <td class=\"line\">1</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/*!</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">2</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * jscoverage: test/index.js</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">3</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * Authors  : fish <zhengxinlin@gmail.com> (https://github.com/fishbar)</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">4</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * Create   : 2014-04-03 15:20:13</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">5</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * CopyRight 2014 (c) Fish And Other Contributors</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">6</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">7</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var fs = require('xfs');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">8</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var path = require('path');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">9</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var expect = require('expect.js');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">10</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var Module = require('module');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">11</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var index = require('../index');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">12</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">13</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">index.config({</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">14</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  get: '_get',</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">15</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  call: '$$call',</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">16</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  replace: '_replace',</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">17</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  reset: '_reset'</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">18</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">});</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">19</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">20</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var abc = require('./abc');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">21</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">22</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">describe(\"index.js\", function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">23</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  describe(\"exports.processFile\", function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">24</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should return an jsc convert file', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">25</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var source = path.join(__dirname, './abc.js');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">26</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var dest = path.join(__dirname, './abc.cov.js');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">27</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      index.processFile(source, dest);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">28</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(fs.existsSync(dest)).to.be(true);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">29</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(fs.readFileSync(dest)).to.match(/_\\$jscoverage/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">30</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      fs.unlinkSync(dest);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">31</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">32</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should throw error when path not file', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">33</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var source = path.join(__dirname, './dir');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">34</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var dest = path.join(__dirname, './abc.cov.js');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">35</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var err;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">36</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      try {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">37</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        index.processFile(source, dest);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">38</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      } catch (e) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">39</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        err = e;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">40</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">41</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(err.message).to.match(/path is dir/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">42</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">43</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should throw error when path is a socket file', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">44</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var net = require('net');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">45</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var serv = net.createServer(function(client){});</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">46</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var ff = path.join(__dirname, './dir/a.sock');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">47</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      serv.listen(ff, function (err) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">48</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        try {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">49</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          index.processFile(ff, path.join(__dirname, './dir/sock-cov'));</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">50</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        } catch (e) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">51</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          expect(e.message).to.match(/not a regular file/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">52</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">53</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        serv.close(done);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">54</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">55</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">56</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    /*</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">57</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    it('should return an jsc convert dir', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">58</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      var source = path.join(__dirname, './dir');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">59</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      var dest = path.join(__dirname, './dir-cov');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">60</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      index.processFile(source, dest);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">61</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      expect(fs.existsSync(dest)).to.be(true);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">62</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      expect(fs.readFileSync(dest + '/a1.js')).to.match(/_\\$jscoverage/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">63</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      expect(fs.readFileSync(dest + '/a/a2')).to.match(/_\\$jscoverage/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">64</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      fs.rmdir(dest, function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">65</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        done();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">66</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">67</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">68</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    it('should ignore exclude', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">69</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      var source = path.join(__dirname, './dir');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">70</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      var dest = path.join(__dirname, './dir-cov');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">71</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      index.processFile(source, dest, ['a2', /\\.md$/i]);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">72</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      expect(fs.existsSync(dest + '/a/a2')).to.not.ok();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">73</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      fs.rmdir(dest, function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">74</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        done();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">75</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">76</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">77</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">78</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should throw error when source and dest not currect', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">79</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      try {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">80</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        index.processFile();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">81</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      } catch (e) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">82</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(e.message).to.match(/path must be a string/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">83</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">84</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">85</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should throw error when source and dest not currect', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">86</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      function _empty() {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">87</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        index.processFile('./abc', '.abc.cov');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">88</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">89</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(_empty).to.throwException(/no such file or directory/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">90</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">91</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should throw error when source and dest not currect', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">92</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      function _empty() {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">93</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        index.processFile(path.join(__dirname, './abdc.js'), '/tmp/abc.cov.js');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">94</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">95</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(_empty).to.throwException(/no such file or directory/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">96</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">97</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">98</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">99</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">100</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">101</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  describe('test Module.extension[\".js\"]', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">102</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should return a function', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">103</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var module = {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">104</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        _compile: function (content, filename) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">105</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          var ff = new Function ('require', 'module', 'exports', '__dirname', '__filename', content + ';return module.exports;');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">106</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          var module = {exports: {}};</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">107</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          var mo = ff(require, module, module.exports, __dirname, filename);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">108</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          mo._replace('d', [</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">109</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            undefined,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">110</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            null,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">111</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            1,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">112</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            NaN,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">113</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            'string',</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">114</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            [1, 2, 3],</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">115</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            {'abc': [1, 2, 3]},</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">116</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            /a\\\\\\\\b/g</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">117</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          ]);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">118</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          var res = mo._get('d');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">119</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          expect(res[0]).to.be(undefined);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">120</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          expect(res[1]).to.be(null);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">121</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          expect(res[2]).to.be(1);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">122</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          expect(isNaN(res[3])).to.be.ok();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">123</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          expect(res[7].test('a\\\\\\\\bc')).to.be.ok();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">124</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          mo._reset();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">125</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          expect(mo._get('d')).to.be(undefined);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">126</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          done();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">127</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">128</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      };</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">129</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      Module._extensions['.js'](module, path.join(__dirname, './abc.js'), {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">130</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        needjsc : true,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">131</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        flagjsc : true,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">132</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        needinject : true</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">133</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">134</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">135</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should return a function', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">136</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var module = {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">137</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        _compile: function (content, filename) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">138</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          var ff = new Function ('require', 'module', 'exports', '__dirname', '__filename', content + ';return module.exports;');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">139</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          var module = {exports: {}};</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">140</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          var mo = ff(require, module, module.exports, __dirname, filename);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">141</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          mo._replace('d', {});</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">142</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          var res = mo._get('d');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">143</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          expect(res).to.be.eql({});</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">144</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          mo._reset();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">145</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          expect(mo._get('d')).to.be(undefined);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">146</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">          done();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">147</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">148</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      };</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">149</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      Module._extensions['.js'](module, path.join(__dirname, './abc.js'), {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">150</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        needjsc : true,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">151</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        flagjsc : true,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">152</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        needinject : true</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">153</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">154</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">155</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">156</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">157</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  describe('getLCOV', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">158</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should be ok', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">159</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      var res = index.getLCOV();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">160</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(res).to.match(/end_of_record/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">161</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(res).to.match(/SF:/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">162</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(res).to.match(/DA:\\d+,\\d+/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">163</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">164</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">165</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">});</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">166</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n    </tbody>\n  </table>\n</div>");