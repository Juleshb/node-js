displayFile("<div class=\"file\">\n  <h2 id=\"test/instrument.test.js\"> test/instrument.test.js</h2>\n  <div id=\"stats\">\n    <div class=\"linecoverage\">\n      <span class=\"linecov high\">\n        [100%]\n      </span>\n      <span>17/17<span>\n      <span class=\"misses\">\n        0\n      </span>\n    </div>\n    <div class=\"branchcoverage\">\n      <span class=\"branchcov high\">\n        [100%]\n      </span>\n      <span>0/0</span>\n      <span class=\"misses\">\n        0\n      </span>\n    </div>\n  </div>\n  <table id=\"source\">\n    <thead>\n      <tr>\n        <th>Line</th>\n        <th>Hits</th>\n        <th>Source</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n      \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">1</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var testMod = require('../lib/instrument.js');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">2</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var expect = require('expect.js');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">3</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">4</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">describe('reporter/util.js', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">5</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var ist = new testMod();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">6</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  describe('util.getType(covlevel, coverage)', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">7</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should ok when ||', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">8</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      ist.process('test', 'if (a > c || a > b){ }');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">9</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(ist.code).to.eql('if (_$jscmd(\"test\", \"cond\", \"1_4_14\", _$jscmd(\"test\", \"cond\", \"1_4_5\", a > c) || _$jscmd(\"test\", \"cond\", \"1_13_5\", a > b))) {}');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">10</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">11</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">12</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should ok when &&', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">13</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      ist.process('test', 'if (a > c && a > b){ }');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">14</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(ist.code).to.eql('if (_$jscmd(\"test\", \"cond\", \"1_4_14\", _$jscmd(\"test\", \"cond\", \"1_4_5\", a > c) && _$jscmd(\"test\", \"cond\", \"1_13_5\", a > b))) {}');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">15</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">16</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">17</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should ok when instanceof', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">18</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      ist.process('test', 'if (a instanceof b){}');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">19</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(ist.code).to.eql('if (_$jscmd(\"test\", \"cond\", \"1_4_14\", a instanceof b)) {}');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">20</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">21</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">22</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should ok when ? :', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">23</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      ist.process('test', 'var a = b ? c : d;');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">24</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      expect(ist.code).to.eql('_$jscmd(\"test\", \"line\", 1);\\n\\nvar a = b ? _$jscmd(\"test\", \"cond\", \"1_12_1\", c) : _$jscmd(\"test\", \"cond\", \"1_16_1\", d);');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">25</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">26</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">27</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">});</td>\n            </tr>\n        \n      \n    </tbody>\n  </table>\n</div>");