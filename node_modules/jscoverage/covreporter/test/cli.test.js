displayFile("<div class=\"file\">\n  <h2 id=\"test/cli.test.js\"> test/cli.test.js</h2>\n  <div id=\"stats\">\n    <div class=\"linecoverage\">\n      <span class=\"linecov high\">\n        [100%]\n      </span>\n      <span>48/48<span>\n      <span class=\"misses\">\n        0\n      </span>\n    </div>\n    <div class=\"branchcoverage\">\n      <span class=\"branchcov high\">\n        [100%]\n      </span>\n      <span>0/0</span>\n      <span class=\"misses\">\n        0\n      </span>\n    </div>\n  </div>\n  <table id=\"source\">\n    <thead>\n      <tr>\n        <th>Line</th>\n        <th>Hits</th>\n        <th>Source</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n      \n      \n        \n        \n            <tr>\n              <td class=\"line\">1</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/*!</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">2</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * jscoverage: test/cli.js</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">3</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * Authors  : fish <zhengxinlin@gmail.com> (https://github.com/fishbar)</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">4</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * Create   : 2014-05-29 10:37:09</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">5</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * CopyRight 2014 (c) Fish And Other Contributors</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">6</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">7</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var index = require('../index');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">8</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var exec = require('child_process').exec, child;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">9</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var path = require('path');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">10</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var originArgv = JSON.parse(JSON.stringify(process.argv));</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">11</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var origCwd = process.cwd();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">12</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var fs = require('fs');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">13</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var expect = require('expect.js');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">14</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">15</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">describe('test cli commands', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">16</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  before(function (){</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">17</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    process.chdir(__dirname);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">18</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">19</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">20</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  after(function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">21</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    fs.unlink(path.join(__dirname, './dir/a1-cov.js'), function(err){});</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">22</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    fs.unlink(path.join(__dirname, './dir/error-cov.js'), function(err){});</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">23</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    fs.unlink(path.join(__dirname, './dir/shebang-cov.js'), function(err){});</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">24</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    fs.unlink(path.join(__dirname, './dir/shebang_withbom-cov.js'), function(err){});</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">25</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    fs.unlink(path.join(__dirname, './dir/test-cov.coffee'), function(err){});</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">26</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    process.chdir(origCwd);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">27</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">28</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">29</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  describe('jscoverage file', function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">30</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should ok cli jscoverage process a file', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">31</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      exec('../bin/jscoverage dir/a1.js --covout=none', function (error, stdout, stderr) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">32</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(error).to.be(null);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">33</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stdout).to.be.empty();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">34</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stderr).to.be.empty();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">35</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        done();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">36</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">37</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">38</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should ok cli jscoverage process a file with shebang', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">39</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      exec('../bin/jscoverage dir/shebang.js', function (error, stdout, stderr) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">40</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(error).to.be(null);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">41</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stdout).to.be.empty();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">42</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stderr).to.be.empty();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">43</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        done();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">44</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">45</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">46</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should ok cli jscoverage process a file with shebang bom', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">47</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      exec('../bin/jscoverage dir/shebang_withbom.js', function (error, stdout, stderr) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">48</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(error).to.be(null);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">49</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stdout).to.be.empty();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">50</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stderr).to.be.empty();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">51</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        done();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">52</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">53</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">54</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should catch error when parse file error', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">55</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      exec('../bin/jscoverage dir/error.js', function (error, stdout, stderr) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">56</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(error).to.be(null);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">57</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stdout).to.match(/Unexpected token/);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">58</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stderr).to.be.empty();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">59</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        done();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">60</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">61</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">62</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">    it('should ok when parse coffee script', function (done) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">63</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      exec('../bin/jscoverage dir/test.coffee', function (error, stdout, stderr) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">64</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(error).to.be(null);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">65</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stdout).to.be.empty();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">66</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        expect(stderr).to.be.empty();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">67</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">        done();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">68</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">69</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">70</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">71</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">});</td>\n            </tr>\n        \n      \n    </tbody>\n  </table>\n</div>");