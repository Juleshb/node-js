displayFile("<div class=\"file\">\n  <h2 id=\"index.js\"> index.js</h2>\n  <div id=\"stats\">\n    <div class=\"linecoverage\">\n      <span class=\"linecov medium\">\n        [86.52%]\n      </span>\n      <span>77/89<span>\n      <span class=\"misses\">\n        12\n      </span>\n    </div>\n    <div class=\"branchcoverage\">\n      <span class=\"branchcov medium\">\n        [96%]\n      </span>\n      <span>24/25</span>\n      <span class=\"misses\">\n        1\n      </span>\n    </div>\n  </div>\n  <table id=\"source\">\n    <thead>\n      <tr>\n        <th>Line</th>\n        <th>Hits</th>\n        <th>Source</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n      \n      \n        \n        \n            <tr>\n              <td class=\"line\">1</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/*!</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">2</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * jscoverage: index.js</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">3</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * Authors  : fish <zhengxinlin@gmail.com> (https://github.com/fishbar)</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">4</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * Create   : 2014-04-03 15:20:13</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">5</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * CopyRight 2014 (c) Fish And Other Contributors</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">6</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> *</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">7</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">8</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">require('coffee-script').register();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">9</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var debug = require('debug')('jscoverage');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">10</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var fs = require('xfs');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">11</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var path = require('path');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">12</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var argv = require('optimist').argv;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">13</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var patch = require('./lib/patch');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">14</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var rptUtil = require('./reporter/util');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">15</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var cmd = argv['$0'];</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">16</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var MODE_MOCHA = false;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">17</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">process.__MOCHA_PREPARED = false;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">18</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var FLAG_LOCK = false;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">19</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">if (/mocha/.test(cmd)) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">20</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  MODE_MOCHA = true;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">21</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">}</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">22</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">23</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">if (MODE_MOCHA) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">24</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  prepareMocha();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">25</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">}</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">26</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var COV_REPORT_NAME = argv.name || 'jscoverage reporter';</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">27</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/**</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">28</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * prepare env for mocha test</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">29</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @covignore</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">30</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">31</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">function prepareMocha() {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">32</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  var covIgnore = argv.covignore;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">33</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  var cwd = process.cwd();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">34</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  var covlevel = argv.coverage;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">35</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (process.__MOCHA_PREPARED) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">36</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    return;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">37</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">38</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  process.__MOCHA_PREPARED = true;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">39</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (covlevel) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">40</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    var tmp = covlevel.split(',');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">41</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    covlevel = {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">42</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      high: parseInt(tmp[0], 10) / 100,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">43</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      middle: parseInt(tmp[1], 10) / 100,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">44</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      low: parseInt(tmp[2], 10) / 100</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">45</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    };</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">46</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  } else {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">47</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    covlevel = {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">48</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      high: 0.9,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">49</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      middle: 0.7,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">50</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      low: 0.3</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">51</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    };</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">52</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">53</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  debug('covlevel', covlevel);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">54</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  /**</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">55</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">   * add after hook</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">56</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">   * @return {[type]} [description]</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">57</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">   */</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">58</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  var supportReporters = ['list', 'spec', 'tap'];</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">59</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  process.nextTick(function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">60</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    try {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">61</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      after(function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">62</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        if (FLAG_LOCK) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">63</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          return;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">64</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">65</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        FLAG_LOCK = true;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">66</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        if (typeof _$jscoverage === 'undefined') {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">67</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          return;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">68</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">69</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        try {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">70</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          if (argv.covout === 'none') {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">71</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            return;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">72</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">73</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          if (!argv.covout) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">74</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            var mochaR = argv.reporter || argv.R;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">75</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            if (supportReporters.indexOf(mochaR) !== -1) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">76</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">              argv.covout = mochaR;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">77</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            } else {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">78</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">              argv.covout = 'list';</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">79</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">80</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">81</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          var reporter;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">82</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          if (/^\\w+$/.test(argv.covout)) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">83</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            reporter = require('./reporter/' + argv.covout);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">84</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          } else {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">85</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">            reporter = require(argv.covout);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">86</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">87</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          reporter.process(_$jscoverage, exports.coverageStats(), covlevel, COV_REPORT_NAME, rptUtil);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">88</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        } catch (e) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">89</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">          console.error('jscoverage reporter error', e, e.stack);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">90</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">91</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">92</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    } catch (e) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">93</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      // do nothing</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">94</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">95</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">96</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (argv.covinject) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">97</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    debug('covinject enabled');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">98</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    patch.enableInject(true);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">99</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">100</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (!covIgnore) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">101</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    try {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">102</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      var stat = fs.statSync('.covignore');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">103</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      stat && (covIgnore = '.covignore');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">104</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      debug('.covignore file found!');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">105</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    } catch (e) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">106</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      return;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">107</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">108</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">109</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  try {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">110</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    covIgnore = fs.readFileSync(covIgnore).toString().split(/\\r?\\n/g);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">111</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    debug('loading .covignore file!');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">112</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  } catch (e) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">113</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    throw new Error('jscoverage loading covIgnore file error:' + covIgnore);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">114</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">115</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  var _ignore = [];</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">116</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  covIgnore.forEach(function (v, i, a) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">117</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    if (!v) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">118</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      return;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">119</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">120</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    if (v.indexOf('/') === 0) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">121</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      v = '^' + cwd + v;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">122</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">123</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    _ignore.push(new RegExp(v.replace(/\\./g, '\\\\.').replace(/\\*/g, '.*')));</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">124</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">125</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">126</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  patch.setCovIgnore(_ignore, argv.overrideIgnore ? true : false);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">127</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">}</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">128</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">129</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">var jscoverage = require('./lib/jscoverage');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">130</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">131</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/**</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">132</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * enableInject description</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">133</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @param {Boolean} true or false</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">134</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">135</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">exports.enableInject = patch.enableInject;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">136</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/**</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">137</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * config the inject function names</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">138</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @param  {Object} obj  {get, replace, call, reset}</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">139</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @example</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">140</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> *</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">141</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> *  jsc.config({get:'$get', replace:'$replace'});</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">142</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> *</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">143</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> *  =====================</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">144</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> *</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">145</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> *  testMod = require('testmodule');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">146</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> *  testMod.$get('name');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">147</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> *  testMod.$replace('name', obj);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">148</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">149</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">exports.config = function (obj) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">150</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var inject_functions = patch.getInjectFunctions();</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">151</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  for (var i in obj) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">152</td>\n              <td class=\"hits\">4</td>\n              <td class=\"source\">    inject_functions[i] = obj[i];</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">153</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">154</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">};</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">155</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/**</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">156</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * process Code, inject the coverage code to the input Code string</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">157</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @param {String} filename  jscoverage file flag</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">158</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @param {Code} content</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">159</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @return {Code} instrumented code</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">160</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">161</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">exports.process = jscoverage.process;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">162</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">163</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/**</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">164</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * processFile, instrument singfile</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">165</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @sync</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">166</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @param  {Path} source  absolute Path</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">167</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @param  {Path} dest    absolute Path</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">168</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @param  {Object} option  [description]</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">169</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">170</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">exports.processFile = function (source, dest, option) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">171</td>\n              <td class=\"hits\">6</td>\n              <td class=\"source\">  var content;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">172</td>\n              <td class=\"hits\">6</td>\n              <td class=\"source\">  var stats;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">173</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  // test source is file or dir, or not a file</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">174</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  try {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">175</td>\n              <td class=\"hits\">6</td>\n              <td class=\"source\">    stats = fs.statSync(source);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">176</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    if (stats.isDirectory()) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">177</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      throw new Error('path is dir');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">178</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    } else if (!stats.isFile()) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">179</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">      throw new Error('path is not a regular file');</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">180</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">181</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  } catch (e) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">182</td>\n              <td class=\"hits\">5</td>\n              <td class=\"source\">    throw new Error('source file error' + e);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">183</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">184</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">185</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  fs.sync().mkdir(path.dirname(dest));</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">186</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">187</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  content = fs.readFileSync(source).toString();</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">188</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var sheBang = false;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">189</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (content.charCodeAt(0) === 65279) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">190</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">    content = content.substr(1);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">191</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">192</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  // cut the shebang</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">193</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (content.indexOf('#!') === 0) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">194</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">    var firstLineEnd = content.indexOf('\\n');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">195</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">    sheBang = content.substr(0, firstLineEnd + 1);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">196</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">    content = content.substr(firstLineEnd + 1);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">197</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">198</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  // check if coffee script</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">199</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var ext = path.extname(source);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">200</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (ext === '.coffee' || ext === '.litcoffee') {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">201</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">    var CoffeeScript = require('coffee-script');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">202</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">    content = CoffeeScript.compile(content, {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">203</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      filename: source</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">204</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    });</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">205</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">206</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  content = this.process(source, content);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">207</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (sheBang) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">208</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">    content = sheBang + content;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">209</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">210</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  fs.writeFileSync(dest, content);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">211</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">};</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">212</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">213</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">function fixData(num) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">214</td>\n              <td class=\"hits\">24</td>\n              <td class=\"source\">  return Math.round(num * 10000) / 10000;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">215</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">}</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">216</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/**</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">217</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * sum the coverage rate</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">218</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @public</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">219</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">220</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">exports.coverageStats = function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">221</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var file;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">222</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var tmp;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">223</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var lineTotal;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">224</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var lineHits;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">225</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var branchTotal;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">226</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var branchHits;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">227</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var n, len;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">228</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var stats = {};</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">229</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var branches, branchesMap, branch;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">230</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var line, start, offset;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">231</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (typeof _$jscoverage === 'undefined') {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">232</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">    return;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">233</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">234</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  for (var i in _$jscoverage) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">235</td>\n              <td class=\"hits\">15</td>\n              <td class=\"source\">    file = i;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">236</td>\n              <td class=\"hits\">15</td>\n              <td class=\"source\">    tmp = _$jscoverage[i];</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">237</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    if (!tmp.length) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">238</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">      continue;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">239</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">240</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    // reset the counters;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">241</td>\n              <td class=\"hits\">15</td>\n              <td class=\"source\">    lineTotal = lineHits = 0;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">242</td>\n              <td class=\"hits\">15</td>\n              <td class=\"source\">    branchTotal = branchHits = 0;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">243</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">244</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    for (n = 0, len = tmp.length; n < len; n++) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">245</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      if (tmp[n] !== undefined) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">246</td>\n              <td class=\"hits\">596</td>\n              <td class=\"source\">        lineTotal ++;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">247</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        if (tmp[n] > 0) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">248</td>\n              <td class=\"hits\">575</td>\n              <td class=\"source\">          lineHits ++;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">249</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">250</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">251</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">252</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    // calculate the branches coverage</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">253</td>\n              <td class=\"hits\">15</td>\n              <td class=\"source\">    branches = tmp.condition;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">254</td>\n              <td class=\"hits\">15</td>\n              <td class=\"source\">    branchesMap = {};</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">255</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    for (n in branches) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">256</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      if (branches[n] === 0) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">257</td>\n              <td class=\"hits\">4</td>\n              <td class=\"source\">        branch = n.split('_');</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">258</td>\n              <td class=\"hits\">4</td>\n              <td class=\"source\">        line = branch[0];</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">259</td>\n              <td class=\"hits\">4</td>\n              <td class=\"source\">        start = parseInt(branch[1], 10);</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">260</td>\n              <td class=\"hits\">4</td>\n              <td class=\"source\">        offset = parseInt(branch[2], 10);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">261</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        if (!branchesMap[line]) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">262</td>\n              <td class=\"hits\">4</td>\n              <td class=\"source\">          branchesMap[line] = [];</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">263</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">264</td>\n              <td class=\"hits\">4</td>\n              <td class=\"source\">        branchesMap[line].push([start, offset]);</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">265</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      } else {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">266</td>\n              <td class=\"hits\">114</td>\n              <td class=\"source\">        branchHits ++;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">267</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">268</td>\n              <td class=\"hits\">118</td>\n              <td class=\"source\">      branchTotal ++;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">269</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">270</td>\n              <td class=\"hits\">15</td>\n              <td class=\"source\">    stats[file] = {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">271</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      lineSloc: lineTotal,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">272</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      lineHits: lineHits,</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss-branch\">\n              <td class=\"line\">273</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      lineCoverage: lineTotal ? fixData(lineHits / lineTotal) : <i class=\"cond-miss\">1</i>,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">274</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      branchSloc: branchTotal,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">275</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      branchHits: branchHits,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">276</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      branchCoverage: branchTotal ? fixData(branchHits / branchTotal) : 1,</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">277</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      branches: branchesMap</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">278</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    };</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">279</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">280</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  return stats;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">281</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">};</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">282</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">283</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">/**</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">284</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * get lcov report</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">285</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> * @return {[type]} [description]</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">286</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"> */</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">287</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">exports.getLCOV = function () {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">288</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var tmp;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">289</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var total;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">290</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var touched;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">291</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var n, len;</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">292</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  var lcov = '';</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">293</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  if (typeof _$jscoverage === 'undefined') {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">294</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">    return;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">295</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">296</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  Object.keys(_$jscoverage).forEach(function (file) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">297</td>\n              <td class=\"hits\">14</td>\n              <td class=\"source\">    lcov += 'SF:' + file + '\\n';</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">298</td>\n              <td class=\"hits\">14</td>\n              <td class=\"source\">    tmp = _$jscoverage[file];</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">299</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    if (!tmp.length) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"miss\">\n              <td class=\"line\">300</td>\n              <td class=\"hits\">0</td>\n              <td class=\"source\">      return;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">301</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">302</td>\n              <td class=\"hits\">14</td>\n              <td class=\"source\">    total = touched = 0;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">303</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    for (n = 0, len = tmp.length; n < len; n++) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">304</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      if (tmp[n] !== undefined) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">305</td>\n              <td class=\"hits\">535</td>\n              <td class=\"source\">        lcov += 'DA:' + n + ',' + tmp[n] + '\\n';</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">306</td>\n              <td class=\"hits\">535</td>\n              <td class=\"source\">        total ++;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">307</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        if (tmp[n] > 0) {</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">308</td>\n              <td class=\"hits\">334</td>\n              <td class=\"source\">          touched++;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">309</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">        }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">310</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">      }</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">311</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">    }</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">312</td>\n              <td class=\"hits\">14</td>\n              <td class=\"source\">    lcov += 'end_of_record\\n';</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">313</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">  });</td>\n            </tr>\n        \n      \n        \n        \n            <tr class=\"hit\">\n              <td class=\"line\">314</td>\n              <td class=\"hits\">1</td>\n              <td class=\"source\">  return lcov;</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">315</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\">};</td>\n            </tr>\n        \n      \n        \n        \n            <tr>\n              <td class=\"line\">316</td>\n              <td class=\"hits\"></td>\n              <td class=\"source\"></td>\n            </tr>\n        \n      \n    </tbody>\n  </table>\n</div>");